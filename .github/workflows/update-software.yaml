name: update-software

on:
  workflow_dispatch:
  schedule:
    # Weekly
    - cron: 0 0 * * 0

jobs:
  UpdateSoftware:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Install Research Software Encyclopedia
      run: |
        sudo apt-get update && sudo apt-get install -y python3 python3-pip python3-setuptools
        sudo pip3 install rse[all]
        rse --version
    - name: Run Latest Scrapers
      env:
        RSE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          rse scrape ascl
          rse scrape imperial
          rse scrape joss
          rse scrape molssi
          rse scrape rsnl
          rse scrape biotools
          # disabled temporarily - certs need update
          #rse scrape hal
          rse scrape ropensci
          rse export repos.txt --force

    - name: Export site to docs/
      uses: rseng/rse-action@0.0.13
      with:        
        config: rse.ini
        export_dir: docs
        force: true
        prefix: software
        host: https://rseng.github.io

    - name: Checkout New Branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH_AGAINST: "master"
      run: |
        printf "GitHub Actor: ${GITHUB_ACTOR}\n"
        export BRANCH_FROM="update/software-$(date '+%Y-%m-%d')"
        git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        git branch
        git checkout -b "${BRANCH_FROM}" || git checkout "${BRANCH_FROM}"
        git branch

        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"

        git add database/*
        git add docs/*

        if git diff-index --quiet HEAD --; then
           printf "No changes\n"
        else
           printf "Changes\n"
           git commit -m "Automated deployment to update software database $(date '+%Y-%m-%d')"
           git push origin "${BRANCH_FROM}"
        fi
        echo "PULL_REQUEST_FROM_BRANCH=${BRANCH_FROM}" >> $GITHUB_ENV

    - name: Open Pull Request
      uses: vsoch/pull-request-action@1.0.12
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PULL_REQUEST_BRANCH: "master"
